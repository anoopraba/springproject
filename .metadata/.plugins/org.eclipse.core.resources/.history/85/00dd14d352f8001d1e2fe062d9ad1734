package com.StudentResults.Controller;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.StudentDetails.Entity.StudentDetails;
import com.StudentMarkSheet.Entity.StudentMarkSheet;
import com.StudentResults.Entity.StudentResults;
import com.StudentResults.Services.StudentResultsServices;

@RestController
public class StudentResultsController {
	@Autowired
	RestTemplate rt;
	@Autowired
	StudentResultsServices resSer;

	@PostMapping("/setResults")
	public String setResults(@RequestBody StudentResults res) {
		return resSer.setResults(res);
	}

	@GetMapping("/getFinalMarks")
	public List<StudentResults> getFinalMarks() {
		return resSer.getFinalMarks();
	}

	@GetMapping("/getFinalMarkByRoll/{rollNumber}")
	public StudentResults getFinalMarkByRoll(@PathVariable int rollNumber) {
		return resSer.getFinalMarkByRoll(rollNumber);
	}

	@PutMapping("/updateByRoll/{rollNumber}")
	public String updateByRoll(@PathVariable int rollNumber) {
		return resSer.updateByRoll(rollNumber);
	}

	@DeleteMapping("/deleteByid/{id}")
	public String deleteByid(@PathVariable int id) {
		return resSer.deleteByid(id);
	}

	@PostMapping("/findResults")
	public String findResults() {
		String url1 = "http://localhost:8080/getAllById";
		ResponseEntity<List<StudentDetails>> studentResponse = rt.exchange(url1, HttpMethod.GET, null,new ParameterizedTypeReference<List<StudentDetails>>() {});
		List<StudentDetails> stDet = studentResponse.getBody();
		List<StudentResults> resultsDetails = new ArrayList<>();
		
		for (StudentDetails x : stDet) {
			String url2 = "http://localhost:8081/getMarkSheetDetailByRoll/";
			ResponseEntity<StudentMarkSheet> markResponse = rt.exchange(url2 + x.getRollNumber(), HttpMethod.GET, null,new ParameterizedTypeReference<StudentMarkSheet>() {});
			StudentMarkSheet marksheet = markResponse.getBody();
			int id=x.getId();
			int rollNumber = x.getRollNumber();
			String name = x.getName();
			int overAll = marksheet.getSem1Total() + marksheet.getSem2Total();
			int total = overAll / 2;
			int percentage = total;
			if (x.getAttendance() > 90) {
				total += 5;
				percentage = total;
				if (total > 100) {
					total = 100;
				}
			
			
	}
	
	
}
